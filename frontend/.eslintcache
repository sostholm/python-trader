[{"D:\\Users\\eekor\\nextcloud\\crypto-dot-com-trader\\frontend\\src\\App.js":"1","D:\\Users\\eekor\\nextcloud\\crypto-dot-com-trader\\frontend\\src\\reportWebVitals.js":"2","D:\\Users\\eekor\\nextcloud\\crypto-dot-com-trader\\frontend\\src\\components\\drawer\\index.js":"3","D:\\Users\\eekor\\nextcloud\\crypto-dot-com-trader\\frontend\\src\\components\\push-notification\\index.js":"4","D:\\Users\\eekor\\nextcloud\\crypto-dot-com-trader\\frontend\\src\\components\\random-color\\index.js":"5","D:\\Users\\eekor\\nextcloud\\crypto-dot-com-trader\\frontend\\src\\services\\index.js":"6","D:\\Users\\eekor\\nextcloud\\crypto-dot-com-trader\\frontend\\src\\components\\add-wallet\\index.jsx":"7","D:\\Users\\eekor\\nextcloud\\crypto-dot-com-trader\\frontend\\src\\components\\Login\\index.js":"8","D:\\Users\\eekor\\nextcloud\\crypto-dot-com-trader\\frontend\\src\\components\\add-token\\index.jsx":"9","D:\\Users\\eekor\\nextcloud\\crypto-dot-com-trader\\frontend\\src\\components\\settings\\index.jsx":"10","D:\\Users\\eekor\\nextcloud\\crypto-dot-com-trader\\frontend\\src\\components\\balance\\index.js":"11","D:\\Users\\eekor\\nextcloud\\crypto-dot-com-trader\\frontend\\src\\views\\carousel\\index.js":"12","D:\\Users\\eekor\\nextcloud\\crypto-dot-com-trader\\frontend\\src\\components\\add-account\\index.js":"13","D:\\Users\\eekor\\nextcloud\\crypto-dot-com-trader\\frontend\\src\\components\\user-heartbeat\\index.js":"14"},{"size":4349,"mtime":1607459750032,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":2464,"mtime":1607248346215,"results":"18","hashOfConfig":"16"},{"size":2289,"mtime":1606661925333,"results":"19","hashOfConfig":"16"},{"size":340,"mtime":1606655511950,"results":"20","hashOfConfig":"16"},{"size":2070,"mtime":1606661912707,"results":"21","hashOfConfig":"16"},{"size":2950,"mtime":1606655511933,"results":"22","hashOfConfig":"16"},{"size":1787,"mtime":1606769844605,"results":"23","hashOfConfig":"16"},{"size":2589,"mtime":1606655511929,"results":"24","hashOfConfig":"16"},{"size":1834,"mtime":1607028687407,"results":"25","hashOfConfig":"16"},{"size":2563,"mtime":1607260358055,"results":"26","hashOfConfig":"16"},{"size":1180,"mtime":1606661922046,"results":"27","hashOfConfig":"16"},{"size":2972,"mtime":1606655511926,"results":"28","hashOfConfig":"16"},{"size":1665,"mtime":1607372798164,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"noanxv",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"34"},"D:\\Users\\eekor\\nextcloud\\crypto-dot-com-trader\\frontend\\src\\App.js",["72","73","74","75","76","77","78","79","80","81","82","83","84","85"],"D:\\Users\\eekor\\nextcloud\\crypto-dot-com-trader\\frontend\\src\\reportWebVitals.js",[],["86","87"],"D:\\Users\\eekor\\nextcloud\\crypto-dot-com-trader\\frontend\\src\\components\\drawer\\index.js",["88","89","90","91"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/icons/Menu';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n  menuButton: {\r\n      position: 'absolute',\r\n      left: '2rem',\r\n      top: '2rem'\r\n  }\r\n});\r\n\r\nexport default function Drawer(props) {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState(false);\r\n\r\n  const toggleDrawer = (open) => (event) => {\r\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState(open);\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(false)}\r\n      onKeyDown={toggleDrawer(false)}\r\n    >\r\n      <List>\r\n        {props.views? props.views.map((view, index) => (\r\n          <ListItem button key={view.key} onClick={() => props.setView(view.text)}>\r\n            {/* <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon> */}\r\n            <ListItemText primary={view.text} />\r\n          </ListItem>\r\n        ))\r\n        :null}\r\n        <ListItem button key=\"logout\" onClick={() => props.logout()}>\r\n            <ListItemText primary=\"Logout\" />\r\n          </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n        <div className={classes.menuButton}>\r\n            <IconButton  color=\"primary\" aria-label=\"upload picture\" component=\"span\" onClick={toggleDrawer(true)}>\r\n            <Menu />\r\n            </IconButton>\r\n        </div>\r\n        <SwipeableDrawer\r\n        anchor={'left'}\r\n        open={state}\r\n        onClose={toggleDrawer(false)}\r\n        onOpen={toggleDrawer(true)}\r\n        >\r\n        {list('left')}\r\n        </SwipeableDrawer>\r\n    </div>\r\n  );\r\n}","D:\\Users\\eekor\\nextcloud\\crypto-dot-com-trader\\frontend\\src\\components\\push-notification\\index.js",["92","93"],"// import * as serviceWorker from 'serviceWorker';\r\n\r\nNotification.requestPermission(status => {\r\n  console.log('Notification permission status:', status);\r\n});\r\n\r\nexport function notification() {\r\n\r\n}\r\n\r\nexport function displayNotification() {\r\n  if (Notification.permission == 'granted') {\r\n    navigator.serviceWorker.getRegistration().then(function (reg) {\r\n      var options = {\r\n        body: 'Here is a notification body!',\r\n        icon: 'images/example.png',\r\n        vibrate: [100, 50, 100],\r\n        data: {\r\n          dateOfArrival: Date.now(),\r\n          primaryKey: 1\r\n        }\r\n      };\r\n      reg.showNotification('Hello world!', options);\r\n\r\n      reg.pushManager.getSubscription().then(function (sub) {\r\n        if (sub === null) {\r\n          // Update UI to ask user to register for Push\r\n          console.log('Not subscribed to push service!');\r\n          subscribeUser()\r\n        } else {\r\n          // We have a subscription, update the database\r\n          console.log('Subscription object: ', JSON.stringify(sub));\r\n        }\r\n      });\r\n\r\n    });\r\n  }\r\n}\r\n\r\nfunction urlBase64ToUint8Array(base64String) {\r\n  const padding = '='.repeat((4 - base64String.length % 4) % 4);\r\n  const base64 = (base64String + padding)\r\n    .replace(/\\-/g, '+')\r\n    .replace(/_/g, '/')\r\n    ;\r\n  const rawData = window.atob(base64);\r\n  return Uint8Array.from([...rawData].map((char) => char.charCodeAt(0)));\r\n}\r\n\r\nconst applicationServerKey = urlBase64ToUint8Array('BOnPOdBMs6jPhfJ_F9EpeyiPOc2dX4niC6-V_zSZcRSn2TwRkI4i_TeLqxiSTSiPgm89355SeAZFZnJp9QMfWqY')\r\n\r\nexport async function subscribeUser(func) {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(function (reg) {\r\n\r\n      reg.pushManager.subscribe({\r\n        userVisibleOnly: true,\r\n        applicationServerKey: applicationServerKey\r\n      }).then(function (sub) {\r\n        console.log('Endpoint URL: ', sub.endpoint);\r\n        console.log('Origin: ', new URL(sub.endpoint).origin)\r\n        func(sub.toJSON())\r\n        return sub\r\n      }).catch(function (e) {\r\n        if (Notification.permission === 'denied') {\r\n          console.warn('Permission for notifications was denied');\r\n        } else {\r\n          console.error('Unable to subscribe to push', e);\r\n        }\r\n      });\r\n    })\r\n  }\r\n}","D:\\Users\\eekor\\nextcloud\\crypto-dot-com-trader\\frontend\\src\\components\\random-color\\index.js",[],["94","95"],"D:\\Users\\eekor\\nextcloud\\crypto-dot-com-trader\\frontend\\src\\services\\index.js",[],["96","97"],"D:\\Users\\eekor\\nextcloud\\crypto-dot-com-trader\\frontend\\src\\components\\add-wallet\\index.jsx",["98"],"import React, {useState, useEffect} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport Select from '@material-ui/core/Select'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport {get_wallet_types, add_wallet} from 'services'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexFlow: 'column',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n      },\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n      },\r\n  }));\r\n\r\nexport default function AddWallet(props){\r\n    const [name, setName] = useState('')\r\n    const [address, setAddress] = useState('')\r\n    const [walletType, setWalletType] = useState()\r\n    const [menuItems, setMenuItems] = useState()\r\n    const classes = useStyles()\r\n\r\n    async function updateWalletTypes(){\r\n        const result = await props.getQuery(get_wallet_types())\r\n        console.log(result)\r\n        console.log('im triggered')\r\n        setMenuItems(result.payload.walletTypes)\r\n    }\r\n\r\n    async function addAccount(){\r\n        await props.getQuery(add_wallet(name, address, walletType))\r\n        console.log('this')\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log('im triggered')\r\n        updateWalletTypes()\r\n    }, [])\r\n\r\n    if(props.invisible) return <></>\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-label\">Wallet Type</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={walletType}\r\n                    onChange={(ev) => setWalletType(ev.target.value)}\r\n                >\r\n                {\r\n                    menuItems && (\r\n                        menuItems.map(item => <MenuItem value={item.id}>{item.name}</MenuItem>)\r\n                    )\r\n                }\r\n                </Select>\r\n            </FormControl>\r\n            <TextField \r\n                id=\"outlined-basic\"  \r\n                variant=\"outlined\" \r\n                value={name} \r\n                onChange={ev => setName(ev.target.value)}\r\n                label=\"Name\"\r\n                autocomplete=\"off\"\r\n            />\r\n            <TextField \r\n                id=\"outlined-basic\" \r\n                variant=\"outlined\" \r\n                value={address} \r\n                onChange={ev => setAddress(ev.target.value)}\r\n                label=\"Address\"\r\n                autocomplete=\"off\"\r\n            />\r\n            <Button variant=\"contained\" color=\"primary\" onClick={addAccount}>Add wallet</Button>\r\n        </div>\r\n    )\r\n}","D:\\Users\\eekor\\nextcloud\\crypto-dot-com-trader\\frontend\\src\\components\\Login\\index.js",[],["99","100"],"D:\\Users\\eekor\\nextcloud\\crypto-dot-com-trader\\frontend\\src\\components\\add-token\\index.jsx",["101"],"import React, {useState, useEffect} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport Select from '@material-ui/core/Select'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport {get_wallets, add_token} from 'services'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexFlow: 'column',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n      },\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n      },\r\n  }));\r\n\r\nexport default function AddToken(props){\r\n    const [token, setName] = useState('')\r\n    const [walletName, setWalletName] = useState('')\r\n    const [menuItems, setMenuItems] = useState()\r\n    const classes = useStyles()\r\n\r\n    async function updateWallets(){\r\n        const result = await props.getQuery(get_wallets())\r\n        console.log(result)\r\n        console.log('im triggered')\r\n        setMenuItems(result.payload.wallets)\r\n    }\r\n\r\n    async function addAccount(){\r\n        await props.getQuery(add_token(token, walletName))\r\n        console.log('this')\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log('im triggered')\r\n        updateWallets()\r\n    }, [])\r\n\r\n    if(props.invisible) return <></>\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-label\">Wallet</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={walletName}\r\n                    onChange={(ev) => setWalletName(ev.target.value)}\r\n                >\r\n                {\r\n                    menuItems && (\r\n                        menuItems.map(item => <MenuItem value={item.name}>{item.name}</MenuItem>)\r\n                    )\r\n                }\r\n                </Select>\r\n            </FormControl>\r\n            <TextField \r\n                id=\"outlined-basic\"  \r\n                variant=\"outlined\" \r\n                value={token} \r\n                onChange={ev => setName(ev.target.value)}\r\n                label=\"Token\"\r\n                autocomplete=\"off\"\r\n            />\r\n            <Button variant=\"contained\" color=\"primary\" onClick={addAccount}>Add token</Button>\r\n        </div>\r\n    )\r\n}","D:\\Users\\eekor\\nextcloud\\crypto-dot-com-trader\\frontend\\src\\components\\settings\\index.jsx",["102","103","104","105","106"],"import React, {useState, useEffect} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport {subscribeUser} from 'components/push-notification'\r\nimport {updateSubscription} from 'services'\r\nimport { useMutation, gql } from '@apollo/client'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexFlow: 'column',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n      },\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n      },\r\n  }));\r\n//   endpoint: \"${subinfo.endpoint}\", expirationTime: \"${subinfo.expirationTime}\", p256dh: \"${subinfo.keys.p256dh}\", auth: \"${subinfo.keys.auth}\")\r\nconst ADD_SUBSCRIPTION = gql`\r\nmutation($endpoint: String!, $expirationTime: Int!, $p256dh: String!, $auth: String!){\r\n  addSubscription(endpoint: $endpoint, expirationTime: $expirationTime, p256dh: $p256dh, auth: $auth){\r\n    stuff\r\n  }\r\n}\r\n`\r\n\r\nexport default function Settings(props){\r\n    const [add_subscription, { data }] = useMutation(ADD_SUBSCRIPTION)\r\n    const classes = useStyles()\r\n\r\n    if(props.invisible) return <></>\r\n\r\n    async function addSubscriptionInfo(){\r\n        await subscribeUser( (sub) => add_subscription({\r\n                variables: {\r\n                endpoint: sub.endpoint, \r\n                expirationTime: sub.expirationTime, \r\n                p256dh: sub.keys.p256dh,\r\n                auth: sub.keys.auth\r\n            }\r\n        }))\r\n        console.log('this')\r\n    }\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={addSubscriptionInfo}>Subscribe Push Notification</Button>\r\n        </div>\r\n    )\r\n}","D:\\Users\\eekor\\nextcloud\\crypto-dot-com-trader\\frontend\\src\\components\\balance\\index.js",["107","108"],"import React, {useState, useEffect} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { HorizontalBar } from 'react-chartjs-2'\r\nimport UserHeartbeat from 'components/user-heartbeat'\r\nimport {colors} from 'components/random-color'\r\nimport { useQuery, gql } from '@apollo/client'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexFlow: 'column',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n      },\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n      },\r\n  }));\r\n\r\nconst MY_BALANCE = gql`\r\nquery{\r\n    me{\r\n      portfolio{\r\n        currency\r\n        total\r\n        usd\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default function Balance(props){\r\n    const [balances, setBalances] = useState()\r\n    const [usd, setUsd] = useState()\r\n    const [doughnut, setDoughnut] = useState()\r\n    const classes = useStyles()\r\n    const { loading, error, data } = useQuery(MY_BALANCE, {\r\n        pollInterval: 10000,\r\n      })\r\n\r\n    useEffect(() => {\r\n        if (data){\r\n            let total_usd = 0\r\n            const above_1 = Object.values(data.me.portfolio).filter(currency => parseFloat(currency.usd) > 1)\r\n            Object.values(above_1).map(currency =>  total_usd += parseFloat(currency.usd))\r\n\r\n            let currencies = {} \r\n            Object.values(above_1).map(currency =>  currencies[currency.currency] = 0)\r\n            Object.values(above_1).map(currency =>  currencies[currency.currency] += parseFloat(currency.usd))\r\n\r\n            currencies = Object.keys(currencies).map(key => [key, currencies[key]])\r\n            currencies.sort((a,b) => (a[1] > b[1]) ? 1 : ((b[1] > a[1]) ? -1 : 0)).reverse()\r\n\r\n            setDoughnut( {\r\n                datasets: [{\r\n                    data: currencies.map(arr =>  arr[1]),\r\n                    backgroundColor: Object.values(above_1).map((currency, index) => colors[index]),\r\n                    label: 'Value in USD'\r\n                }],\r\n                // These labels appear in the legend and in the tooltips when hovering different arcs\r\n                labels: currencies.map(arr =>  arr[0])\r\n            })\r\n            setUsd(total_usd)\r\n        }\r\n    }, [data])\r\n\r\n    if (loading) return <p>Loading...</p>\r\n    if (error) return <p>Error :(</p>\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <UserHeartbeat />\r\n            <div>{usd}</div>\r\n            <HorizontalBar width={\"90%\"} data={doughnut} />\r\n        </div>\r\n    )\r\n}","D:\\Users\\eekor\\nextcloud\\crypto-dot-com-trader\\frontend\\src\\views\\carousel\\index.js",["109","110","111","112","113","114","115"],"import React, {useState} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst styles = makeStyles((theme) => ({\r\n    scene: {\r\n        width: '210px',\r\n        height: '140px',\r\n        position: 'relative',\r\n        perspective: '1000px'\r\n    },\r\n    carousel:{\r\n        width: '100%',\r\n        height: '100%',\r\n        position: 'absolute',\r\n        transformStyle: 'preserve-3d',\r\n    },\r\n    carousel__cell: {\r\n        position: 'absolute',\r\n        width: '190px',\r\n        height: '120px',\r\n        left: '10px',\r\n        top: '10px',\r\n    }\r\n  }));\r\n\r\nexport default function Carousel(props){\r\n\r\n  const [carousel, setCarousel] = useState(props.children)\r\n  const [cells, setCells] = useState()\r\n  const [cellCount, setCellCount] = useState()\r\n  const [selectedIndex, setSelectedIndex] = useState(0)\r\n\r\n    return(\r\n        <div class={styles.carousel}>\r\n            <div className={styles.carousel}>\r\n                {\r\n                    carousel.map((child, index) => <div className={styles.carousel__cell} style={{ transform: `rotateY(  ${index*40}deg)` }}>{child}</div>)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n",["116","117"],"D:\\Users\\eekor\\nextcloud\\crypto-dot-com-trader\\frontend\\src\\components\\add-account\\index.js",["118"],"import React, {useState, useEffect} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport Select from '@material-ui/core/Select'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport {get_exchanges, add_account} from 'services'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexFlow: 'column',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n      },\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n      },\r\n  }));\r\n\r\nexport default function AddAccount(props){\r\n    const [apiKey, setApiKey] = useState('')\r\n    const [apiSecret, setApiSecret] = useState('')\r\n    const [exchange, setExchange] = useState()\r\n    const [menuItems, setMenuItems] = useState()\r\n    const classes = useStyles()\r\n\r\n    async function updateExchanges(){\r\n        const result = await props.getQuery(get_exchanges())\r\n        console.log(result)\r\n        console.log('im triggered')\r\n        setMenuItems(result.payload.exchanges)\r\n    }\r\n\r\n    async function addAccount(){\r\n        await props.getQuery(add_account(apiKey, apiSecret, exchange))\r\n        console.log('this')\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log('im triggered')\r\n        updateExchanges()\r\n    }, [])\r\n\r\n    if(props.invisible) return <></>\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-label\">Exchange</InputLabel>\r\n                <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={exchange}\r\n                onChange={(ev) => setExchange(ev.target.value)}\r\n                >\r\n                {\r\n                    menuItems && (\r\n                        menuItems.map(item => <MenuItem value={item.id}>{item.name}</MenuItem>)\r\n                    )\r\n                }\r\n                </Select>\r\n            </FormControl>\r\n            <TextField \r\n                id=\"outlined-basic\"  \r\n                variant=\"outlined\" \r\n                value={apiKey} \r\n                onChange={ev => setApiKey(ev.target.value)}\r\n                label=\"Api Key\"\r\n                autocomplete=\"off\"\r\n            />\r\n            <TextField \r\n                id=\"outlined-basic\" \r\n                variant=\"outlined\" \r\n                value={apiSecret} \r\n                onChange={ev => setApiSecret(ev.target.value)}\r\n                label=\"Api Secret\"\r\n                type=\"password\"\r\n                autocomplete=\"off\"\r\n            />\r\n            <Button variant=\"contained\" color=\"primary\" onClick={addAccount}>Add Account</Button>\r\n        </div>\r\n    )\r\n}","D:\\Users\\eekor\\nextcloud\\crypto-dot-com-trader\\frontend\\src\\components\\user-heartbeat\\index.js",["119"],"import React, { useState, useEffect } from 'react'\r\nimport { useQuery, gql } from '@apollo/client'\r\n\r\nconst MY_BALANCE = gql`\r\nquery{\r\n    me{\r\n        lastUpdate\r\n    }\r\n  }\r\n`\r\n\r\nexport default function UserHeartbeat(props) {\r\n    const [alive, setAlive] = useState(true)\r\n    const { loading, error, data } = useQuery(MY_BALANCE, {\r\n        pollInterval: 50000,\r\n    })\r\n\r\n    useEffect(()=>{\r\n        if(data && 'me' in data && 'lastUpdate' in data.me){\r\n            const last_update = new Date(data.me.lastUpdate * 1000)\r\n            if(((new Date()) - last_update) > 1200000){\r\n                setAlive(false)\r\n            }\r\n            else if(!alive && ((new Date()) - last_update) < 1200000){\r\n                setAlive(true)\r\n            }\r\n        }\r\n    }, [data])\r\n\r\n    if (loading) return <p>Loading...</p>\r\n    if (error) return <p>Error :(</p>\r\n\r\n    return (\r\n        <svg width=\"50\" height=\"50\" viewBox=\"0 0 200 200\">\r\n            <g transform=\"translate(100 100)\">\r\n                <path transform=\"translate(-50 -50)\" fill={ alive? \"tomato\" : \"gray\"} d=\"M92.71,7.27L92.71,7.27c-9.71-9.69-25.46-9.69-35.18,0L50,14.79l-7.54-7.52C32.75-2.42,17-2.42,7.29,7.27v0 c-9.71,9.69-9.71,25.41,0,35.1L50,85l42.71-42.63C102.43,32.68,102.43,16.96,92.71,7.27z\"></path>\r\n                { alive && <animateTransform\r\n                    attributeName=\"transform\"\r\n                    type=\"scale\"\r\n                    values=\"1; 1.5; 1.25; 1.5; 1.5; 1; 1; 1; 1; 1;\"\r\n                    dur=\"2s\"\r\n                    repeatCount=\"indefinite\"\r\n                    additive=\"sum\">\r\n                </animateTransform>}\r\n            </g>\r\n        </svg>\r\n    )\r\n}",{"ruleId":"120","severity":1,"message":"121","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":12},{"ruleId":"120","severity":1,"message":"124","line":4,"column":55,"nodeType":"122","messageId":"123","endLine":4,"endColumn":62},{"ruleId":"120","severity":1,"message":"125","line":9,"column":26,"nodeType":"122","messageId":"123","endLine":9,"endColumn":36},{"ruleId":"120","severity":1,"message":"126","line":13,"column":8,"nodeType":"122","messageId":"123","endLine":13,"endColumn":18},{"ruleId":"120","severity":1,"message":"127","line":14,"column":8,"nodeType":"122","messageId":"123","endLine":14,"endColumn":17},{"ruleId":"120","severity":1,"message":"128","line":15,"column":8,"nodeType":"122","messageId":"123","endLine":15,"endColumn":16},{"ruleId":"120","severity":1,"message":"129","line":19,"column":8,"nodeType":"122","messageId":"123","endLine":19,"endColumn":16},{"ruleId":"120","severity":1,"message":"130","line":55,"column":7,"nodeType":"122","messageId":"123","endLine":55,"endColumn":12},{"ruleId":"120","severity":1,"message":"131","line":69,"column":10,"nodeType":"122","messageId":"123","endLine":69,"endColumn":17},{"ruleId":"120","severity":1,"message":"132","line":69,"column":19,"nodeType":"122","messageId":"123","endLine":69,"endColumn":29},{"ruleId":"133","severity":1,"message":"134","line":85,"column":29,"nodeType":"135","messageId":"136","endLine":85,"endColumn":37,"fix":"137"},{"ruleId":"138","severity":1,"message":"139","line":101,"column":6,"nodeType":"140","endLine":101,"endColumn":13,"suggestions":"141"},{"ruleId":"138","severity":1,"message":"142","line":111,"column":6,"nodeType":"140","endLine":111,"endColumn":16,"suggestions":"143"},{"ruleId":"144","severity":1,"message":"145","line":131,"column":31,"nodeType":"146","messageId":"147","endLine":131,"endColumn":33},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"120","severity":1,"message":"152","line":8,"column":8,"nodeType":"122","messageId":"123","endLine":8,"endColumn":15},{"ruleId":"120","severity":1,"message":"153","line":10,"column":8,"nodeType":"122","messageId":"123","endLine":10,"endColumn":20},{"ruleId":"120","severity":1,"message":"154","line":12,"column":8,"nodeType":"122","messageId":"123","endLine":12,"endColumn":17},{"ruleId":"120","severity":1,"message":"155","line":13,"column":8,"nodeType":"122","messageId":"123","endLine":13,"endColumn":16},{"ruleId":"144","severity":1,"message":"145","line":12,"column":31,"nodeType":"146","messageId":"147","endLine":12,"endColumn":33},{"ruleId":"156","severity":1,"message":"157","line":43,"column":15,"nodeType":"158","messageId":"159","endLine":43,"endColumn":16,"suggestions":"160"},{"ruleId":"148","replacedBy":"161"},{"ruleId":"150","replacedBy":"162"},{"ruleId":"148","replacedBy":"163"},{"ruleId":"150","replacedBy":"164"},{"ruleId":"138","severity":1,"message":"165","line":48,"column":8,"nodeType":"140","endLine":48,"endColumn":10,"suggestions":"166"},{"ruleId":"148","replacedBy":"167"},{"ruleId":"150","replacedBy":"168"},{"ruleId":"138","severity":1,"message":"169","line":47,"column":8,"nodeType":"140","endLine":47,"endColumn":10,"suggestions":"170"},{"ruleId":"120","severity":1,"message":"171","line":1,"column":16,"nodeType":"122","messageId":"123","endLine":1,"endColumn":24},{"ruleId":"120","severity":1,"message":"172","line":1,"column":26,"nodeType":"122","messageId":"123","endLine":1,"endColumn":35},{"ruleId":"120","severity":1,"message":"173","line":3,"column":8,"nodeType":"122","messageId":"123","endLine":3,"endColumn":17},{"ruleId":"120","severity":1,"message":"174","line":6,"column":9,"nodeType":"122","messageId":"123","endLine":6,"endColumn":27},{"ruleId":"120","severity":1,"message":"175","line":33,"column":32,"nodeType":"122","messageId":"123","endLine":33,"endColumn":36},{"ruleId":"120","severity":1,"message":"176","line":36,"column":12,"nodeType":"122","messageId":"123","endLine":36,"endColumn":20},{"ruleId":"120","severity":1,"message":"177","line":36,"column":22,"nodeType":"122","messageId":"123","endLine":36,"endColumn":33},{"ruleId":"120","severity":1,"message":"178","line":28,"column":20,"nodeType":"122","messageId":"123","endLine":28,"endColumn":31},{"ruleId":"120","severity":1,"message":"179","line":29,"column":10,"nodeType":"122","messageId":"123","endLine":29,"endColumn":15},{"ruleId":"120","severity":1,"message":"180","line":29,"column":17,"nodeType":"122","messageId":"123","endLine":29,"endColumn":25},{"ruleId":"120","severity":1,"message":"181","line":30,"column":10,"nodeType":"122","messageId":"123","endLine":30,"endColumn":19},{"ruleId":"120","severity":1,"message":"182","line":30,"column":21,"nodeType":"122","messageId":"123","endLine":30,"endColumn":33},{"ruleId":"120","severity":1,"message":"183","line":31,"column":10,"nodeType":"122","messageId":"123","endLine":31,"endColumn":23},{"ruleId":"120","severity":1,"message":"184","line":31,"column":25,"nodeType":"122","messageId":"123","endLine":31,"endColumn":41},{"ruleId":"148","replacedBy":"185"},{"ruleId":"150","replacedBy":"186"},{"ruleId":"138","severity":1,"message":"187","line":48,"column":8,"nodeType":"140","endLine":48,"endColumn":10,"suggestions":"188"},{"ruleId":"138","severity":1,"message":"189","line":28,"column":8,"nodeType":"140","endLine":28,"endColumn":14,"suggestions":"190"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'onError' is defined but never used.","'makeStyles' is defined but never used.","'AddAccount' is defined but never used.","'AddWallet' is defined but never used.","'AddToken' is defined but never used.","'Carousel' is defined but never used.","'views' is assigned a value but never used.","'gqlLink' is assigned a value but never used.","'setGQLLink' is assigned a value but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"191","text":"192"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'view'. Either include it or remove the dependency array.","ArrayExpression",["193"],"React Hook useEffect has missing dependencies: 'client' and 'view'. Either include them or remove the dependency array.",["194"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["195"],"no-negated-in-lhs",["196"],"'Divider' is defined but never used.","'ListItemIcon' is defined but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["197","198"],["195"],["196"],["195"],["196"],"React Hook useEffect has a missing dependency: 'updateWalletTypes'. Either include it or remove the dependency array.",["199"],["195"],["196"],"React Hook useEffect has a missing dependency: 'updateWallets'. Either include it or remove the dependency array.",["200"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'TextField' is defined but never used.","'updateSubscription' is defined but never used.","'data' is assigned a value but never used.","'balances' is assigned a value but never used.","'setBalances' is assigned a value but never used.","'setCarousel' is assigned a value but never used.","'cells' is assigned a value but never used.","'setCells' is assigned a value but never used.","'cellCount' is assigned a value but never used.","'setCellCount' is assigned a value but never used.","'selectedIndex' is assigned a value but never used.","'setSelectedIndex' is assigned a value but never used.",["195"],["196"],"React Hook useEffect has a missing dependency: 'updateExchanges'. Either include it or remove the dependency array.",["201"],"React Hook useEffect has a missing dependency: 'alive'. Either include it or remove the dependency array.",["202"],[2414,2414],"()",{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},"no-global-assign","no-unsafe-negation",{"messageId":"207","fix":"208","desc":"209"},{"messageId":"210","fix":"211","desc":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},"Update the dependencies array to be: [token, view]",{"range":"221","text":"222"},"Update the dependencies array to be: [client, loggedIn, view]",{"range":"223","text":"224"},"removeEscape",{"range":"225","text":"226"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"227","text":"228"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [updateWalletTypes]",{"range":"229","text":"230"},"Update the dependencies array to be: [updateWallets]",{"range":"231","text":"232"},"Update the dependencies array to be: [updateExchanges]",{"range":"233","text":"234"},"Update the dependencies array to be: [alive, data]",{"range":"235","text":"236"},[2765,2772],"[token, view]",[2966,2976],"[client, loggedIn, view]",[1255,1256],"",[1255,1255],"\\",[1526,1528],"[updateWalletTypes]",[1448,1450],"[updateWallets]",[1523,1525],"[updateExchanges]",[770,776],"[alive, data]"]